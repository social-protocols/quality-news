
google.charts.load('current', {packages: ['corechart', 'line']});
google.charts.setOnLoadCallback(drawCharts);

window.addEventListener('resize', drawCharts, false);

var submissionTime = {{.Story.SubmissionTime}};

var ranksPlotData = {{.RanksPlotDataJSON}};
var upvotesPlotData = {{.UpvotesPlotDataJSON}};
var upvoteRatePlotData = upvotesPlotData;

function drawCharts() {
  // make all charts have the same x-axis range as the ranks plot chart
  var startTime = ranksPlotData[0][0]

  date = document.getElementsByName("storyplot-date-selector")[0]
  var endTime = {{.Story.SubmissionTime}} + date.value*3600
  if (endTime > {{.MaxSampleTime}}) {
    endTime = {{.MaxSampleTime}}
  }

  ranksPlot(ranksPlotData, submissionTime, startTime, endTime)
  upvotesPlot(upvotesPlotData, submissionTime, startTime, endTime)
  upvoteRatePlot(upvoteRatePlotData, submissionTime, startTime, endTime)
  // penaltyPlot(penaltyPlotData, submissionTime, startTime, endTime)
}

// how rank is displayed when hovering over a datapoint
class rankFormat {
  format(dt, column) {
    for (var i=0;i<dt.getNumberOfRows();i++) {
      var v = dt.getValue(i, column);
      if (v == 91) {
        v = "> 90"
      }
      dt.setFormattedValue(i, column, v);
    }
  }
}

// how age is displayed when hovering over a datapoint
class ageFormat {
  format(dt, column) {
    for (var i=0;i<dt.getNumberOfRows();i++) {
      var ageHours = dt.getValue(i, column);

      // We converted the sample time to an age in hours for display on the X axis
      // But when we hover we want to see the original sample time.
      var timeStamp = {{.Story.SubmissionTime}} + ageHours * 3600

      var d = new Date(0); // The 0 there is the key, which sets the date to the epoch
      d.setUTCSeconds(timeStamp);

      dt.setFormattedValue(i, column, d.toISOString().split('.')[0] + 'Z');
    }
  }
}

var getJSON = function(url, callback) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'json';
    xhr.onload = function() {
      var status = xhr.status;
      if (status === 200) {
        callback(null, xhr.response);
      } else {
        callback(status, xhr.response);
      }
    };
    xhr.send();
};

// var changeDate = function(date) {
//   var unixEpoch =  Math.floor(new Date(date.value) / 1000)
//   drawCharts(unixEpoch)
// }

var changeRelativeDate = function() {
  drawCharts()
}

{{template "ranksPlot.js.tmpl" .}}
{{template "upvotesPlot.js.tmpl" .}}
{{template "upvoteRatePlot.js.tmpl" .}}

